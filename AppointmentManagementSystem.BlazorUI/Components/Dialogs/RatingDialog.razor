@using Radzen

<div style="padding: 20px;">
    <RadzenStack Orientation="Orientation.Vertical" Gap="16px">
        <div style="text-align: center;">
            <RadzenText TextStyle="TextStyle.Body1" Style="margin-bottom: 12px;">
                Lütfen randevunuzu değerlendirin
            </RadzenText>
            <RadzenRating @bind-Value="@Rating" Stars="5" />
            @if (Rating > 0)
            {
                <RadzenText TextStyle="TextStyle.Caption" Style="margin-top: 8px; color: var(--rz-success);">
                    ✓ @Rating yıldız seçildi
                </RadzenText>
            }
        </div>
        <RadzenTextArea @bind-Value="@Review" Placeholder="Yorumunuzu yazın (opsiyonel)" Rows="4" Style="width: 100%;" />
        <RadzenStack Orientation="Orientation.Horizontal" Gap="8px" JustifyContent="JustifyContent.End">
            <RadzenButton Text="İptal" ButtonStyle="ButtonStyle.Light" Click="@Cancel" />
            <RadzenButton Text="Gönder" ButtonStyle="ButtonStyle.Primary" Click="@Submit" />
        </RadzenStack>
    </RadzenStack>
</div>

@code {
    [Parameter]
    public int Rating { get; set; } = 0;
    
    [Parameter]
    public string Review { get; set; } = "";
    
    [Parameter]
    public EventCallback OnCancel { get; set; }
    
    [Parameter]
    public EventCallback<(int rating, string review)> OnSubmit { get; set; }

    private async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }

    private async Task Submit()
    {
        if (Rating == 0)
        {
            // Bu durumda parent'a bildirim göndereceğiz
            await OnSubmit.InvokeAsync((0, Review));
        }
        else
        {
            await OnSubmit.InvokeAsync((Rating, Review));
        }
    }
}
