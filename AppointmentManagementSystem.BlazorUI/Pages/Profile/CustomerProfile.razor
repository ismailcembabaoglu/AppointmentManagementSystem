@page "/profile"
@attribute [Authorize(Roles = "Customer")]
@using AppointmentManagementSystem.Application.DTOs
@using AppointmentManagementSystem.BlazorUI.Services.ApiServices
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Radzen
@inject AuthenticationStateProvider AuthStateProvider
@inject NotificationService NotificationService

<PageTitle>Profilim</PageTitle>

<RadzenStack Orientation="Orientation.Vertical" Gap="20px" Style="padding: 16px;">
    <!-- Header -->
    <RadzenCard Style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none;">
        <RadzenStack Orientation="Orientation.Vertical" Gap="8px">
            <RadzenText TextStyle="TextStyle.H4" Style="margin: 0; font-weight: 700;">ðŸ‘¤ Profil Bilgilerim</RadzenText>
            <RadzenText TextStyle="TextStyle.Body1" Style="opacity: 0.95; margin: 0;">KiÅŸisel bilgilerinizi gÃ¼ncelleyin</RadzenText>
        </RadzenStack>
    </RadzenCard>

    <RadzenRow Gap="20px">
        <!-- Profile Photo -->
        <RadzenColumn Size="12" SizeMD="4">
            <RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" Gap="16px" AlignItems="AlignItems.Center">
                    <div class="profile-photo-wrapper">
                        @if (!string.IsNullOrEmpty(profilePhotoUrl))
                        {
                            <img src="@profilePhotoUrl" alt="Profile" class="profile-photo" />
                        }
                        else
                        {
                            <div class="profile-photo-placeholder">
                                <RadzenIcon Icon="person" Style="font-size: 64px; color: white;" />
                            </div>
                        }
                    </div>
                    <RadzenButton Text="FotoÄŸraf DeÄŸiÅŸtir" Icon="upload" ButtonStyle="ButtonStyle.Light" Style="width: 100%;" />
                    <RadzenText TextStyle="TextStyle.Caption" Style="color: var(--rz-text-secondary-color); text-align: center;">Maksimum 2MB, JPG veya PNG</RadzenText>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>

        <!-- Profile Form -->
        <RadzenColumn Size="12" SizeMD="8">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.H6" Style="margin: 0 0 20px 0; font-weight: 600;">KiÅŸisel Bilgiler</RadzenText>
                <RadzenStack Orientation="Orientation.Vertical" Gap="16px">
                    <RadzenRow Gap="16px">
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenLabel Text="Ad *" />
                            <RadzenTextBox @bind-Value="firstName" Placeholder="AdÄ±nÄ±z" Style="width: 100%;" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenLabel Text="Soyad *" />
                            <RadzenTextBox @bind-Value="lastName" Placeholder="SoyadÄ±nÄ±z" Style="width: 100%;" />
                        </RadzenColumn>
                    </RadzenRow>

                    <div>
                        <RadzenLabel Text="Email *" />
                        <RadzenTextBox @bind-Value="email" Placeholder="email@example.com" Style="width: 100%;" />
                    </div>

                    <div>
                        <RadzenLabel Text="Telefon *" />
                        <RadzenTextBox @bind-Value="phone" Placeholder="0555 555 55 55" Style="width: 100%;" />
                    </div>

                    <RadzenRow Gap="16px">
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenLabel Text="Ä°l" />
                            <RadzenDropDown @bind-Value="selectedCity" Data="@cities" Placeholder="Ä°l SeÃ§in" Style="width: 100%;" AllowFiltering="true" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenLabel Text="Ä°lÃ§e" />
                            <RadzenDropDown @bind-Value="selectedDistrict" Data="@districts" Placeholder="Ä°lÃ§e SeÃ§in" Style="width: 100%;" AllowFiltering="true" Disabled="@string.IsNullOrEmpty(selectedCity)" />
                        </RadzenColumn>
                    </RadzenRow>

                    <div>
                        <RadzenLabel Text="Adres" />
                        <RadzenTextArea @bind-Value="address" Rows="3" Placeholder="Tam adresiniz" Style="width: 100%;" />
                    </div>

                    <RadzenStack Orientation="Orientation.Horizontal" Gap="12px" JustifyContent="JustifyContent.End">
                        <RadzenButton Text="Ä°ptal" ButtonStyle="ButtonStyle.Light" />
                        <RadzenButton Text="Kaydet" Icon="save" ButtonStyle="ButtonStyle.Primary" Click="SaveProfile" Disabled="@isSaving" />
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

<style>
    .profile-photo-wrapper {
        width: 160px;
        height: 160px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 0 8px 24px rgba(0,0,0,0.15);
    }

    .profile-photo {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .profile-photo-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

@code {
    private string firstName = "";
    private string lastName = "";
    private string email = "";
    private string phone = "";
    private string selectedCity = "";
    private string selectedDistrict = "";
    private string address = "";
    private string profilePhotoUrl = "";
    private bool isSaving = false;

    private List<string> cities = new() { "Ä°stanbul", "Ankara", "Ä°zmir", "Bursa", "Antalya", "Adana" };
    private List<string> districts = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var fullName = user.Identity.Name ?? "";
            var parts = fullName.Split(' ');
            firstName = parts.Length > 0 ? parts[0] : "";
            lastName = parts.Length > 1 ? string.Join(" ", parts.Skip(1)) : "";
            email = user.FindFirst("email")?.Value ?? "";
        }
    }

    private async Task SaveProfile()
    {
        isSaving = true;
        
        // TODO: API call to save profile
        await Task.Delay(1000);
        
        NotificationService.Notify(NotificationSeverity.Success, "BaÅŸarÄ±lÄ±", "Profil bilgileriniz gÃ¼ncellendi.");
        isSaving = false;
    }
}